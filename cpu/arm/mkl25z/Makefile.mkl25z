# Adapted from Makefile.msp430

ifdef nodeid
CFLAGS += -DNODEID=$(nodeid)
endif

### Code common for all ARM CPUs

CONTIKI_CPU_ARM=$(CONTIKI)/cpu/arm
CONTIKI_CPU_ARM_COMMON=$(CONTIKI_CPU_ARM)/common

### Define the CPU directory
CONTIKI_CPU=$(CONTIKI_CPU_ARM)/mkl25z

MCU = cortex-m0plus

### Define the source files we have in the mkl25z port

CONTIKI_CPU_DIRS = . ../common/dbg-io loader

MKL25Z     =   kinetis_sysinit.c clock.c debug-uart.c \
               rtimer-arch.c serial.c spi.c nvic.c cpu.c clock.c \
               kinetis_sysinit.c watchdog.c
               
MKL25ZASM  = startup.S

#UIPDRIVERS = me.c me_tabs.c slip.c crc16.c

TARGETLIBS = random.c dbg-printf.c dbg-puts.c dbg-putchar.c dbg-sprintf.c dbg-snprintf.c strformat.c

CONTIKI_TARGET_SOURCEFILES += $(MKL25Z) $(TARGETLIBS) $(UIPDRIVERS)

CONTIKI_SOURCEFILES        += $(CONTIKI_TARGET_SOURCEFILES)


### Compiler definitions
CC       = arm-none-eabi-gcc
CP       = arm-none-eabi-objcopy
LD       = arm-none-eabi-ld
AS       = $(CC) -x assembler-with-cpp
AR       = arm-none-eabi-ar
NM       = arm-none-eabi-nm
OBJCOPY  = arm-none-eabi-objcopy
STRIP    = arm-none-eabi-strip
HEX      = $(CP) -O ihex
BIN      = $(CP) -O binary -S
S19      = $(CP) -O srec


XSLTPROC=xsltproc

PROJECT_OBJECTFILES += ${addprefix $(OBJECTDIR)/,$(CONTIKI_TARGET_MAIN:.c=.o)}
PROJECT_OBJECTFILES += ${addprefix $(OBJECTDIR)/,$(CONTIKI_TARGET_SOURCEFILES:.c=.o)}
PROJECT_OBJECTFILES += ${addprefix $(OBJECTDIR)/,$(MKL25ZASM:.S=.o)}

LINKERSCRIPT = $(CONTIKI_CPU)/MKL25Z128_flash.ld


ARCH_FLAGS= -mthumb
MCFLAGS = -mcpu=$(MCU)
CPFLAGS = -gdwarf-2 -fomit-frame-pointer -Wall -fverbose-asm -Wa,-adhlns="$@.lst"
#-Wa,-ahlms=$(<:.c=.lst)

DEFS = $(DDEFS) $(UDEFS)
ADEFS = $(DADEFS) $(UADEFS)
OBJS = $(ASRC:.S=.o) $(SRC:.c=.o)

CFLAGSNO = -I. -L$(CONTIKI)/core -I$(CONTIKI_CPU) -I$(CONTIKI_CPU)/loader \
			-I$(CONTIKI_CPU)/dbg-io -I$(CONTIKI)/dev \
            -I$(CONTIKI)/platform/$(TARGET)\
            ${addprefix -I,$(APPDIRS)} \
            -DMCK=$(MCK) -DAUTOSTART_ENABLE
            
CONTIKIFLAGS = -O -DRUN_AS_SYSTEM -DROM_RUN 
LDFLAGSNO = -L$(CONTIKI_CPU)
		   
 
ASFLAGS = $(MCFLAGS) $(ARCH_FLAGS) -g -gdwarf-2 -Wa,-amhls=$(<:.S=.lst) $(ADEFS)		   
CFLAGS  += $(MCFLAGS) $(OPT)  $(ARCH_FLAGS) $(CFLAGSNO) $(CONTIKIFLAGS) $(CPFLAGS) $(DEFS)
LDFLAGS += $(MCFLAGS) $(ARCH_FLAGS) -nostartfiles -T$(LINKERSCRIPT) -Wl,-Map=$(FULL_PRJ).map,--cref,--no-warn-mismatch $(LDFLAGSNO)

CDEPFLAGS = $(CFLAGS) -D __MAKING_DEPS__



CUSTOM_RULE_C_TO_OBJECTDIR_O=yes
CUSTOM_RULE_C_TO_O=yes

%.o: %.c
	@echo @@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	@echo $(CONTIKI_TARGET_SOURCEFILES)
	@echo $(PROJECT_OBJECTFILES)
	@echo @@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	@echo CC $@
	@$(CC) -c $(CFLAGS) $< -o $@

$(OBJECTDIR)/%.o: %.c | $(OBJECTDIR)
	@echo CC $@
	@$(CC) $(CFLAGS) -c $< -o $@


CUSTOM_RULE_S_TO_OBJECTDIR_O = yes
%.o: %.S
	@echo AS $@
	@$(AS) -c $(ASFLAGS) $< -o $@

$(OBJECTDIR)/%.o: %.S | $(OBJECTDIR)
	@echo AS $@
	@$(AS) -c $(ASFLAGS) $< -o $@

%.out: $^
	: | awk -f ../../tools/mknmlist > $ <at> _tmp.c && mv $ <at> _tmp.c $ <at> _nm.c
	$(CC) $(LDFLAGS) $(CFLAGS) -o $ <at>  $^ $(LIBC) $ <at> _nm.c
	$(NM) $ <at>  | awk -f ../../tools/mknmlist > $ <at> _tmp.c && mv $ <at> _tmp.c $ <at> _nm.c
	$(CC) $(LDFLAGS) $(CFLAGS) -o $ <at>  $^ $(LIBC) $ <at> _nm.c

.PHONY: symbols.c
ifdef CORE
%.$(TARGET): %.co $(PROJECT_OBJECTFILES) contiki-$(TARGET).a $(OBJECTDIR)/symbols.o
	$(CC) $(LDFLAGS) $(CFLAGS) -nostartfiles -o $@ $(filter-out %.a,$^) $(filter %.a,$^) -lc $(filter %.a,$^)

symbols.c: $(CORE)
	$(NM) $< | awk -f $(CONTIKI_CPU)/builtins.awk -f ../../tools/mknmlist > symbols.c

else
%.$(TARGET): %-nosyms.$(TARGET)
	ln -sf $< $@
endif

empty-symbols.c:
	cp ${CONTIKI}/tools/empty-symbols.c symbols.c
	cp ${CONTIKI}/tools/empty-symbols.h symbols.h

CUSTOM_RULE_C_TO_CO=yes
%.co: %.c
	@echo CC $@
	@$(CC) $(CFLAGS) -c $< -o $@

CUSTOM_RULE_C_TO_CE=yes
%.ce: %.o
	$(LD) $(LDFLAGS) --relocatable $< -o $@

CUSTOM_RULE_LINK=yes
%.$(TARGET): %.co $(PROJECT_OBJECTFILES) contiki-$(TARGET).a 
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $(filter-out %.a,$^) $(filter %.a,$^) -lc $(filter %.a,$^)
	$(CC) $(LDFLAGS) $(CFLAGS) -o contiki-$(TARGET).elf $(filter-out %.a,$^) $(filter %.a,$^) -lc $(filter %.a,$^)

%.srec: %.$(TARGET)
	$(S19) contiki-$(TARGET).elf contiki-$(TARGET).srec

clean: clean_cpu

.PHONY: mkl25z_clean

clean_cpu:
	-rm -rf $(BUILTSRCDIR)
	-rm -rf $(CONTIKI_PROJECT)-nosyms.$(TARGET) $(CONTIKI_PROJECT).$(TARGET) contiki-$(TARGET).elf contiki-$(TARGET).srec contiki-$(TARGET).hex

.PRECIOUS: %.$(TARGET)
